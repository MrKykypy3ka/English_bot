Index: run.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import asyncio\r\nimport logging\r\nfrom create_bot import dp, bot, send_newsletter_everyone\r\nfrom app.handlers import router, scheduler\r\nfrom functions import read_config\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\n\r\n\r\nasync def main():\r\n    dp.include_router(router)\r\n    scheduler.start()\r\n    scheduler.add_job(send_newsletter_everyone, 'date', run_date=read_config()['newsletter']['date'])\r\n    await dp.start_polling(bot)\r\n\r\n\r\nif __name__ == '__main__':\r\n    try:\r\n        asyncio.run(main())\r\n    except KeyboardInterrupt:\r\n        print('Exit')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/run.py b/run.py
--- a/run.py	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/run.py	(date 1738282270890)
@@ -10,7 +10,8 @@
 async def main():
     dp.include_router(router)
     scheduler.start()
-    scheduler.add_job(send_newsletter_everyone, 'date', run_date=read_config()['newsletter']['date'])
+    if read_config()['newsletter']['date']:
+        scheduler.add_job(send_newsletter_everyone, 'date', run_date=read_config()['newsletter']['date'])
     await dp.start_polling(bot)
 
 
Index: app/keyboards.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\n\r\nfrom aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton\r\nfrom aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder\r\n\r\nfrom functions import read_config\r\n\r\nuser_keyboard = ReplyKeyboardMarkup(keyboard=[\r\n    [KeyboardButton(text='\uD83D\uDCE9–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')],\r\n    [KeyboardButton(text='\uD83D\uDCF0–ù–æ–≤–æ—Å—Ç–∏'), KeyboardButton(text='‚Ñπ\uFE0F–ò–Ω—Ñ–æ')]\r\n],\r\n                           resize_keyboard=True,\r\n                           input_field_placeholder='–ú–µ–Ω—é –Ω–∏–∂–µ')\r\n\r\nadmin_keyboard = ReplyKeyboardMarkup(keyboard=[\r\n    [KeyboardButton(text='\uD83E\uDEE1–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤')],\r\n    [KeyboardButton(text='‚úè\uFE0F–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')],\r\n    [KeyboardButton(text='\uFE0F\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º (–≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π)')],\r\n    [KeyboardButton(text='\uFE0F‚ùì–£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –æ—Ñ–æ—Ä–º–∏–≤—à–∏—Ö –ø–æ–¥–ø–∏—Å–∫—É')],\r\n    # [KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É')],\r\n    [KeyboardButton(text='–í—ã–π—Ç–∏')]],\r\n                           resize_keyboard=True)\r\n\r\n\r\nasync def inline_subscribes():\r\n    keyboard = InlineKeyboardBuilder()\r\n    subscription = read_config()[\"newsletter\"]['subscription']\r\n    for user in subscription:\r\n        keyboard.add(InlineKeyboardButton(text=user, url=subscription[user]))\r\n    keyboard.add(InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='check'))\r\n    return keyboard.adjust(1).as_markup()\r\n\r\n\r\nasync def inline_admins():\r\n    keyboard = InlineKeyboardBuilder()\r\n    for user in read_config()[\"Admins\"]:\r\n        keyboard.add(InlineKeyboardButton(text=user, callback_data=f'user: {user}'))\r\n    keyboard.add(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='append'))\r\n    return keyboard.adjust(1).as_markup()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/keyboards.py b/app/keyboards.py
--- a/app/keyboards.py	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/app/keyboards.py	(date 1738282761171)
@@ -15,7 +15,7 @@
 admin_keyboard = ReplyKeyboardMarkup(keyboard=[
     [KeyboardButton(text='ü´°–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤')],
     [KeyboardButton(text='‚úèÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')],
-    [KeyboardButton(text='Ô∏èüë®‚Äçüë©‚Äçüë¶‚Äçüë¶–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º (–≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π)')],
+    # [KeyboardButton(text='Ô∏èüë®‚Äçüë©‚Äçüë¶‚Äçüë¶–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º (–≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π)')],
     [KeyboardButton(text='Ô∏è‚ùì–£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –æ—Ñ–æ—Ä–º–∏–≤—à–∏—Ö –ø–æ–¥–ø–∏—Å–∫—É')],
     # [KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É')],
     [KeyboardButton(text='–í—ã–π—Ç–∏')]],
Index: .idea/English_bot.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.venv\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/English_bot.iml b/.idea/English_bot.iml
--- a/.idea/English_bot.iml	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/.idea/English_bot.iml	(date 1738202042844)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.venv" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Python 3.12 (BGPU_bot)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.13 (English_bot)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.13 (English_bot)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/.idea/misc.xml	(date 1738202042867)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.13 (English_bot)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13 (English_bot)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12 (BGPU_bot)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: data/users.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1425132540\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/users.txt b/data/users.txt
--- a/data/users.txt	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/data/users.txt	(date 1738281432676)
@@ -1,1 +1,8 @@
 1425132540
+941560022
+675236792
+440786706
+6157898987
+1235998165
+800619022
+453618534
Index: app/handlers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import re\r\nfrom aiogram import F, Router\r\nfrom aiogram.filters import CommandStart\r\nfrom aiogram.types import Message, CallbackQuery, FSInputFile\r\nfrom aiogram.fsm.state import StatesGroup, State\r\nfrom aiogram.fsm.context import FSMContext\r\nfrom aiogram.exceptions import TelegramBadRequest\r\nfrom apscheduler.schedulers.asyncio import AsyncIOScheduler\r\n\r\nfrom functions import *\r\nimport app.keyboards as kb\r\nfrom datetime import datetime, timedelta\r\n\r\nfrom create_bot import send_newsletter_everyone, send_newsletter_one\r\n\r\nrouter = Router()\r\nscheduler = AsyncIOScheduler()\r\n\r\n\r\nclass Admin(StatesGroup):\r\n    login = State()\r\n\r\n\r\nclass Newsletter(StatesGroup):\r\n    subscription = State()\r\n    link = State()\r\n    data = State()\r\n\r\n\r\nclass People(StatesGroup):\r\n    login = State()\r\n\r\n\r\n@router.message(CommandStart())\r\nasync def cmd_start(message: Message):\r\n    await message.reply(\r\n        f\"\"\"–ü—Ä–∏–≤–µ—Ç {message.from_user.username}! –ù–∞ —Å–≤—è–∑–∏ –±–æ—Ç @engncity\r\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–µ–Ω—è –∏ –º–æ–∏—Ö –∫–æ–ª–ª–µ–≥.\"\"\",\r\n        reply_markup=kb.user_keyboard)\r\n\r\n\r\n@router.message(F.text.lower() == 'admin')\r\nasync def admin_menu(message: Message):\r\n    if message.from_user.username in read_config()[\"Admins\"]:\r\n        await message.answer(f'–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è',\r\n                             reply_markup=kb.admin_keyboard)\r\n    else:\r\n        await message.answer(f'–¢—ã –Ω–µ –∞–¥–º–∏–Ω\uD83D\uDE21')\r\n\r\n\r\n@router.message(F.text == '\uD83E\uDEE1–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤')\r\nasync def edit_admins(message: Message):\r\n    if message.from_user.username in read_config()[\"Admins\"]:\r\n        await message.answer(f'–ê–¥–º–∏–Ω—ã:\\n'\r\n                             f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–¥–º–∏–Ω–∞ —á—Ç–æ–±—ã –µ–≥–æ —É–¥–∞–ª–∏—Ç—å.',\r\n                             reply_markup=await kb.inline_admins())\r\n    else:\r\n        await message.answer(f'–¢—ã –Ω–µ –∞–¥–º–∏–Ω\uD83D\uDE21')\r\n\r\n\r\n@router.message(F.text == '\uD83D\uDCE9–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')\r\nasync def set_message_list(message: Message):\r\n    await message.answer(f\"\"\"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã:\r\n    \r\n‚ùó–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏¬ª\"\"\",\r\n                         reply_markup=await kb.inline_subscribes())\r\n\r\n\r\n@router.message(F.text == '\uD83D\uDCF0–ù–æ–≤–æ—Å—Ç–∏')\r\nasync def set_message_list(message: Message):\r\n    y, mo, d, h, mi, s = map(int, re.split(r\"[- :]\", read_config()['newsletter']['date']))\r\n    if datetime(*list([y, mo, d, h, mi, s])) > datetime.now():\r\n        y, mo, d, h, mi, s = re.split(r\"[- :]\", str(datetime(y, mo, d, h, mi, s) + timedelta(hours=3)))\r\n        await message.answer(f\"\"\"–°–ª–µ–¥—É—é—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {d}.{mo}.{y} –≤ {h}:{mi} –ø–æ –ú–°–ö\"\"\",\r\n                             reply_markup=kb.user_keyboard)\r\n    else:\r\n        await message.answer(f\"\"\"–†–∞—Å—Å—ã–ª–∫–∞ –µ—â—ë –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.\"\"\",\r\n                             reply_markup=kb.user_keyboard)\r\n\r\n\r\n@router.message(F.text == '‚Ñπ\uFE0F–ò–Ω—Ñ–æ')\r\nasync def set_message_list(message: Message):\r\n    await message.answer(f\"\"\"\r\n–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ ‚ú®\r\n\r\n–ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏:\r\n\uD83D\uDFE3 –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å–µ–±—è, –±—É–¥—å –í—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ —É—á–∞—â–∏–º—Å—è\r\n\r\n–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª - @engncity:\r\n\uD83D\uDFE3 –í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ\r\n\uD83D\uDFE3 –†–∞–∑–≥–ª–∞–≥–æ–ª—å—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ –∂–∏–∑–Ω–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–∏\r\n\r\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è: @lilith_slip\"\"\",\r\n                         reply_markup=kb.user_keyboard)\r\n\r\n\r\n@router.message(F.text == '–í—ã–π—Ç–∏')\r\nasync def back(message: Message):\r\n    await message.answer(text=\"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:\", reply_markup=kb.user_keyboard)\r\n\r\n\r\n@router.callback_query(F.data == 'check')\r\nasync def subscribe(callback: CallbackQuery):\r\n    try:\r\n        if await check_subscriptions(callback):\r\n            y, mo, d, h, mi, s = map(int, re.split(r\"[- :]\", read_config()['newsletter']['date']))\r\n            print(str(datetime(y, mo, d, h, mi, s) + timedelta(hours=3)))\r\n            write_user(callback.from_user.id)\r\n            y, mo, d, h, mi, s = re.split(r\"[- :]\", str(datetime(y, mo, d, h, mi, s) + timedelta(hours=3)))\r\n            await callback.message.answer(\r\n                f\"\"\"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∏ \uD83D\uDC9C\r\n–ë–æ—Ç –ø—Ä–∏—à–ª–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã {d}.{mo}.{y} –≤ {h}:{mi}\r\n\r\n‚ùó\uFE0F–ù–µ –æ—Ç–º–µ–Ω—è–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏, –∏–Ω–∞—á–µ –±–æ—Ç –Ω–µ –ø—Ä–∏—à–ª–µ—Ç –í–∞–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã \"\"\")\r\n        else:\r\n            await callback.message.answer(\"–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞—Å—Å—ã–ª–∫–µ.\")\r\n    except TelegramBadRequest as e:\r\n        print(e)\r\n\r\n\r\n@router.callback_query(F.data.startswith('user'))\r\nasync def del_admin(callback: CallbackQuery):\r\n    data = read_config()\r\n    if callback.data.split(\": \")[1] not in [\"Mrkykypy3a\", \"lilith_sl\"]:\r\n        data[\"Admins\"].remove(callback.data.split(\": \")[1])\r\n        write_config(data)\r\n        await callback.message.answer(f'–ê–¥–º–∏–Ω —É–¥—ë–ª—ë–Ω', reply_markup=await kb.inline_admins())\r\n    else:\r\n        await callback.message.answer(f'–ò—Ö –Ω–µ–ª—å–∑—è —É–¥–∞–ª—è—Ç—å!', reply_markup=await kb.inline_admins())\r\n\r\n\r\n@router.callback_query(F.data == 'append')\r\nasync def write_admin(callback: CallbackQuery, state: FSMContext):\r\n    await state.set_state(Admin.login)\r\n    await callback.message.answer(\"–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞:\")\r\n\r\n\r\n@router.message(Admin.login)\r\nasync def add_admin(message: Message, state: FSMContext):\r\n    await state.update_data(login=message.text)\r\n    data = read_config()\r\n    login = await state.get_data()\r\n    data[\"Admins\"].append(login[\"login\"])\r\n    write_config(data)\r\n    await state.clear()\r\n    await message.answer(f'–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=await kb.inline_admins())\r\n\r\n\r\n@router.message(F.text == '‚úè\uFE0F–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')\r\nasync def edit_message_list(message: Message, state: FSMContext):\r\n    if message.from_user.username in read_config()[\"Admins\"]:\r\n        await state.set_state(Newsletter.subscription)\r\n        await message.answer(f\"\"\"–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è:\\n\"\"\")\r\n    else:\r\n        await message.answer(f'–¢—ã –Ω–µ –∞–¥–º–∏–Ω\uD83D\uDE21')\r\n\r\n\r\n@router.message(Newsletter.subscription)\r\nasync def write_link(message: Message, state: FSMContext):\r\n    await state.update_data(subscription=message.text)\r\n    await state.set_state(Newsletter.link)\r\n    await message.answer(\"–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\")\r\n\r\n\r\n@router.message(Newsletter.link)\r\nasync def write_link(message: Message, state: FSMContext):\r\n    await state.update_data(link=message.text)\r\n    await state.set_state(Newsletter.data)\r\n    await message.answer(\"\"\"–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–∞—Å—Å—ã–ª–∫–∏:\\n\r\n–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (–ú–°–ö): –ì–æ–¥ –ú–µ—Å—è—Ü –î–µ–Ω—å –ß–∞—Å –ú–∏–Ω—É—Ç—ã\"\"\")\r\n\r\n\r\n@router.message(Newsletter.data)\r\nasync def edit_message_list(message: Message, state: FSMContext):\r\n    await state.update_data(date=message.text)\r\n    config = read_config()\r\n    data = await state.get_data()\r\n    try:\r\n        temp = dict()\r\n        for elem in data['subscription'].split(' '):\r\n            name = elem[elem.rfind('/') + 1:]\r\n            temp[name] = elem\r\n        config[\"newsletter\"][\"subscription\"] = temp\r\n        config[\"newsletter\"][\"link\"] = data['link']\r\n        today = datetime.now()\r\n        y, mo, d, h, mi = list(map(int, (data['date']).split(' ')))\r\n        custom_date = datetime(y, mo, d, h, mi) - timedelta(hours=3)\r\n        y, mo, d, h, mi = data['date'].split(' ')\r\n        if custom_date < today:\r\n            raise\r\n        config[\"newsletter\"][\"date\"] = str(custom_date)\r\n        write_config(config)\r\n        print(data['date'])\r\n        with open(\"data/users.txt\", \"r\", encoding='utf-8') as f:\r\n            users = list(map(str.strip, f.readlines()))\r\n            for user_id in users:\r\n                await message.bot.send_message(text=f\"\"\"–£–†–ê! –ì–æ—Ç–æ–≤—ã –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!\r\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞:\r\n{d}.{mo}.{y} –≤ {h}:{mi} –ø–æ –ú–°–ö\"\"\",\r\n                                               chat_id=user_id)\r\n        with open(\"data/users.txt\", \"w\", encoding='utf-8') as f:\r\n            f.write('')\r\n\r\n        scheduler.remove_all_jobs()\r\n        scheduler.add_job(send_newsletter_everyone, 'date', run_date=str(custom_date))\r\n        await message.answer(f'–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞', reply_markup=kb.admin_keyboard)\r\n    except Exception as e:\r\n        print(e)\r\n        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')\r\n    await state.clear()\r\n\r\n\r\n@router.message(F.text == '\uFE0F\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º (–≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à—ë–ª —Å–±–æ–π)')\r\nasync def sand_all(message: Message):\r\n    scheduler.add_job(send_newsletter_everyone, 'date', run_date=str(datetime.now() + timedelta(seconds=5)))\r\n    await message.answer(f\"\"\"–ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏–¥—ë—Ç —Ä–∞—Å—Å—ã–ª–∫–∞\"\"\")\r\n\r\n\r\n@router.message(F.text == '\uFE0F‚ùì–£–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –æ—Ñ–æ—Ä–º–∏–≤—à–∏—Ö –ø–æ–¥–ø–∏—Å–∫—É')\r\nasync def check_people(message: Message):\r\n    with open(\"data/users.txt\", 'r', encoding='utf-8') as f:\r\n        await message.answer(f\"{len(f.readlines())} –ü–æ–¥–ø–∏—Å–∞–ª–æ—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É\")\r\n\r\n\r\n@router.message(F.text == '–í—ã–≥—Ä—É–∑–∏—Ç—å')\r\nasync def backup(message: Message):\r\n    if message.from_user.username in read_config()[\"Admins\"]:\r\n        await message.answer_document(document=FSInputFile(path='data/users.txt'))\r\n        await message.answer_document(document=FSInputFile(path='data/newsletter.json'))\r\n    else:\r\n        await message.answer(f'–¢—ã –Ω–µ –∞–¥–º–∏–Ω\uD83D\uDE21')\r\n\r\n\r\n# @router.message(F.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É')\r\n# async def sand_all(message: Message, state: FSMContext):\r\n#     await state.set_state(People.login)\r\n#     await message.answer(\"–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É:\")\r\n\r\n\r\n@router.message(People.login)\r\nasync def send_newsletter(message: Message, state: FSMContext):\r\n    scheduler.add_job(send_newsletter_one, 'date',\r\n                      run_date=str(datetime.now() + timedelta(seconds=5)),\r\n                      args=[message.text])\r\n    await message.answer(f\"\"\"–ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏–¥—ë—Ç —Ä–∞—Å—Å—ã–ª–∫–∞\"\"\")\r\n    await state.clear()\r\n\r\n\r\n@router.message()\r\nasync def handle_unmatched_message(message: Message):\r\n    await message.answer(\"–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\", reply_markup=kb.user_keyboard)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/handlers.py b/app/handlers.py
--- a/app/handlers.py	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/app/handlers.py	(date 1738282270919)
@@ -186,18 +186,21 @@
         y, mo, d, h, mi = list(map(int, (data['date']).split(' ')))
         custom_date = datetime(y, mo, d, h, mi) - timedelta(hours=3)
         y, mo, d, h, mi = data['date'].split(' ')
+        await message.answer(f'{custom_date}, {today}')
         if custom_date < today:
-            raise
+            raise "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞"
         config["newsletter"]["date"] = str(custom_date)
         write_config(config)
         print(data['date'])
         with open("data/users.txt", "r", encoding='utf-8') as f:
             users = list(map(str.strip, f.readlines()))
             for user_id in users:
-                await message.bot.send_message(text=f"""–£–†–ê! –ì–æ—Ç–æ–≤—ã –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!
+                try:
+                    await message.bot.send_message(text=f"""–£–†–ê! –ì–æ—Ç–æ–≤—ã –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!
 –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞:
-{d}.{mo}.{y} –≤ {h}:{mi} –ø–æ –ú–°–ö""",
-                                               chat_id=user_id)
+{d}.{mo}.{y} –≤ {h}:{mi} –ø–æ –ú–°–ö""", chat_id=user_id)
+                except:
+                    await message.answer(f'–ü–∏–¥–æ—Ä–∞—Å —Å id {user_id} –∫–∏–Ω—É–ª –±–æ—Ç–∞ –≤ –ß–°')
         with open("data/users.txt", "w", encoding='utf-8') as f:
             f.write('')
 
@@ -205,7 +208,6 @@
         scheduler.add_job(send_newsletter_everyone, 'date', run_date=str(custom_date))
         await message.answer(f'–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞', reply_markup=kb.admin_keyboard)
     except Exception as e:
-        print(e)
         await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
     await state.clear()
 
@@ -237,13 +239,13 @@
 #     await message.answer("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É:")
 
 
-@router.message(People.login)
-async def send_newsletter(message: Message, state: FSMContext):
-    scheduler.add_job(send_newsletter_one, 'date',
-                      run_date=str(datetime.now() + timedelta(seconds=5)),
-                      args=[message.text])
-    await message.answer(f"""–ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏–¥—ë—Ç —Ä–∞—Å—Å—ã–ª–∫–∞""")
-    await state.clear()
+# @router.message(People.login)
+# async def send_newsletter(message: Message, state: FSMContext):
+#     scheduler.add_job(send_newsletter_one, 'date',
+#                       run_date=str(datetime.now() + timedelta(seconds=5)),
+#                       args=[message.text])
+#     await message.answer(f"""–ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏–¥—ë—Ç —Ä–∞—Å—Å—ã–ª–∫–∞""")
+#     await state.clear()
 
 
 @router.message()
Index: create_bot.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from aiogram import Bot, Dispatcher\r\nfrom functions import read_user, read_config\r\nfrom dotenv import load_dotenv\r\nimport os\r\n\r\nload_dotenv()\r\nAPI_TOKEN = os.getenv(\"API_TOKEN\")\r\n\r\nbot = Bot(token=API_TOKEN)\r\ndp = Dispatcher()\r\n\r\n\r\nasync def check_subscriptions(user_id):\r\n    try:\r\n        subscription = read_config()[\"newsletter\"][\"subscription\"]\r\n        for chanel in subscription:\r\n            member = await bot.get_chat_member(chat_id=\"@\" + chanel, user_id=user_id)\r\n            if member.status not in [\"member\", \"administrator\", \"creator\"]:\r\n                return False\r\n        return True\r\n    except Exception as e:\r\n        print(e)\r\n\r\n\r\nasync def send_newsletter_everyone():\r\n    users = read_user()\r\n    for user_id in users:\r\n        try:\r\n            if await check_subscriptions(user_id):\r\n                malling_list = read_config()['newsletter']\r\n                await bot.send_message(text=f\"\"\"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –õ–æ–≤–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\r\n{malling_list['link']}\r\n–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! \uD83D\uDC9C\"\"\", chat_id=user_id)\r\n            else:\r\n                await bot.send_message(text=\"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª—ã\uD83D\uDE12\",\r\n                                       chat_id=user_id)\r\n                await bot.send_message(text=f\"{user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É –∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª\",\r\n                                       chat_id='1425132540')\r\n        except Exception as e:\r\n            print(e)\r\n\r\n\r\nasync def send_newsletter_one(user_id):\r\n    try:\r\n        if await check_subscriptions(user_id):\r\n            malling_list = read_config()['newsletter']\r\n            await bot.send_message(text=f\"\"\"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –õ–æ–≤–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\r\n{malling_list['link']}\r\n–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! \uD83D\uDC9C\"\"\", chat_id=user_id)\r\n        else:\r\n            await bot.send_message(text=\"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª—ã\uD83D\uDE12\",\r\n                                   chat_id=user_id)\r\n            await bot.send_message(text=f\"{user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É –∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª\",\r\n                                   chat_id='1425132540')\r\n    except Exception:\r\n        print(e)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/create_bot.py b/create_bot.py
--- a/create_bot.py	(revision 973c858a836bd9c333be2a081dea2ae96a138d39)
+++ b/create_bot.py	(date 1738282270957)
@@ -52,5 +52,5 @@
                                    chat_id=user_id)
             await bot.send_message(text=f"{user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É –∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª",
                                    chat_id='1425132540')
-    except Exception:
+    except Exception as e:
         print(e)
